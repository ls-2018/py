# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-12-19 03:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='主机名')),
                ('hostip', models.GenericIPAddressField(verbose_name='主机ip地址')),
                ('settings', models.CharField(choices=[('0', '开发'), ('1', '测试'), ('2', '准生产'), ('3', '生产')], default='0', max_length=20, verbose_name='环境')),
                ('type', models.CharField(choices=[('0', 'nginx'), ('1', 'other')], default='1', max_length=20, verbose_name='类型')),
            ],
        ),
        migrations.CreateModel(
            name='Host_Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功')], default='0', max_length=20, verbose_name='更新状态')),
                ('backup', models.CharField(choices=[('0', '是'), ('1', '否')], default='0', max_length=20, verbose_name='备份状态')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Host', verbose_name='发布机器')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('0', '等待更新'), ('1', '更新中'), ('2', '等待测试'), ('3', '测试通过'), ('4', '更新完成'), ('5', '更新失败'), ('6', '回滚成功')], default='0', max_length=20, verbose_name='更新状态')),
                ('backup', models.CharField(choices=[('0', '是'), ('1', '否')], default='0', max_length=20, verbose_name='备份状态')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='项目名')),
                ('path', models.CharField(max_length=200, verbose_name='项目目录')),
                ('git_path', models.CharField(max_length=200, verbose_name='git地址')),
                ('nginxconf', models.CharField(blank=True, max_length=200, null=True, verbose_name='nginx配置文件')),
                ('nginxupstarm', models.CharField(blank=True, max_length=200, null=True, verbose_name='nginx upstartm名称')),
                ('language', models.CharField(choices=[('0', 'python'), ('1', 'java'), ('2', 'go'), ('3', 'php'), ('4', 'html')], default='0', max_length=20, verbose_name='语言')),
                ('note', models.CharField(blank=True, max_length=218, null=True, verbose_name='备注信息')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('host', models.ManyToManyField(related_name='upstarm机器', to='web.Host', verbose_name='后端主机')),
                ('nginxhost', models.ManyToManyField(related_name='nginx', to='web.Host', verbose_name='nginx机器')),
                ('test_user', models.ManyToManyField(related_name='测试人员', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ManyToManyField(related_name='研发人员', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-create_time',),
            },
        ),
        migrations.AddField(
            model_name='issue',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Team', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='issue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='发布人'),
        ),
        migrations.AddField(
            model_name='host_issue',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Issue', verbose_name='更新'),
        ),
        migrations.AddField(
            model_name='host_issue',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.Team', verbose_name='发布项目'),
        ),
        migrations.AddField(
            model_name='host_issue',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='发布人'),
        ),
    ]
