"""
给定一个数组A[N],希望构造一个新的数组B[N],其中,b[i] = a[0]*a[1]*....a[N-1]/a[i]
在构造的过程中,
    1、不允许使用除法
    2、要求O(1)空间复杂度,O(N)时间复杂度
    3、除遍历计数器与A[N],B[N]外,不可以使用新的变量
    4、请使用程序实现并简单描述

总之就在正向从0乘到 i-1  ,在反向从N-1乘到 i+1

"""


def calculate(a, b):
    b[0] = 1  # ----->为什么b[0]要等于1
    N = len(a)
    i = 1
    while i < N:
        b[i] = b[i - 1] * a[i - 1]  # 正向计算乘积,只是计算了a[0]*....a[i-1],还应该乘以a[i+1]...a[N-1]
        i += 1

    b[0] = a[N - 1]
    i = N - 2
    while i >= 1:
        # 执行之前  b[0] =  a[N-1]*...*a[i+1]
        b[i] *= b[0]  # 正好对应了19行的内容
        b[0] *= a[i]  # 逆向计算乘积,b[0] = a[N-1]*a[N-2].....a[1]
        i -= 1


if __name__ == '__main__':
    a = [1, 2, 3, 4, 5, ]
    b = [None] * len(a)
    calculate(a, b)
    print(b)
